// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "frc/smartdashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/SpinStorage.h"
#include "Commands/ShootCells.h"
#include "Commands/ClimbShieldGen.h"
#include "Commands/IntakePullIn.h"
#include "Commands/VisionDrive.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    operatorJoystick.reset(new frc::XboxController(1));

    wheelControl.reset(new frc::JoystickButton(operatorJoystick.get(), 8));
    wheelControl->WhileHeld(new SpinStorage());
    shoot.reset(new frc::JoystickButton(operatorJoystick.get(), 7));
    shoot->WhileHeld(new ShootCells());
    intakeIn.reset(new frc::JoystickButton(operatorJoystick.get(), 6));
    intakeIn->WhileHeld(new IntakePullIn());
    driverJoystick.reset(new frc::XboxController(0));
    vision.reset(new frc::JoystickButton(driverJoystick.get(), 3));
    vision->WhileHeld(new VisionDrive());

    climb.reset(new frc::JoystickButton(driverJoystick.get(), 5));
    climb->WhileHeld(new ClimbShieldGen());

    // SmartDashboard Buttons
    // frc::SmartDashboard::PutData("Blank", new Blank());
    frc::SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::XboxController> OI::getDriverJoystick() {
   return driverJoystick;
}

std::shared_ptr<frc::XboxController> OI::getOperatorJoystick() {
   return operatorJoystick;
}

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
